
;Helper function declaration
(define-fun range ((x Int) (lower Int) (upper Int)) Bool (and (< lower x) (< x upper)))

;Declaration of rules for output variables
(define-fun output0_rule1 Int (ite rule1_applies 100 outp))

(define-fun output0_rule2 Int (ite rule2_applies 100 outp))
(define-fun output1_rule2 Int (ite rule2_applies 200 outpp))

(define-fun output0_rule3 Int (ite rule3_applies 100 outp))
(define-fun output1_rule3 Int (ite rule3_applies 200 outpp))

(define-fun output0_rule4 Int (ite rule4_applies 100 outp))
(define-fun output1_rule4 Int (ite rule4_applies 200 outpp))

(define-fun output0_rule5 Int (ite rule5_applies 100 outp))
(define-fun output1_rule5 Int (ite rule5_applies 200 outpp))

(define-fun output0_rule6 Int (ite rule6_applies 100 outp))
(define-fun output1_rule6 Int (ite rule6_applies 200 outpp))

(define-fun output0_rule7 Int (ite rule7_applies 100 outp))
(define-fun output1_rule7 Int (ite rule7_applies 200 outpp))

(define-fun output0_rule8 Int (ite rule8_applies 100 outp))
(define-fun output1_rule8 Int (ite rule8_applies 200 outpp))

(define-fun output0_rule9 Int (ite rule9_applies 100 outp))
(define-fun output1_rule9 Int (ite rule9_applies 200 outpp))

(define-fun output0_rule10 Int (ite rule10_applies 100 outp))
(define-fun output1_rule10 Int (ite rule10_applies 200 outpp))

(define-fun output0_rule11 Int (ite rule11_applies 100 outp))
(define-fun output1_rule11 Int (ite rule11_applies 200 outpp))

(define-fun output0_rule12 Int (ite rule12_applies 100 outp))
(define-fun output1_rule12 Int (ite rule12_applies 200 outpp))

(define-fun output0_rule13 Int (ite rule13_applies 100 outp))
(define-fun output1_rule13 Int (ite rule13_applies 200 outpp))

(define-fun output0_rule14 Int (ite rule14_applies 100 outp))
(define-fun output1_rule14 Int (ite rule14_applies 200 outpp))

(define-fun output0_rule15 Int (ite rule15_applies 100 outp))
(define-fun output1_rule15 Int (ite rule15_applies 200 outpp))

(define-fun output0_rule16 Int (ite rule16_applies 100 outp))
(define-fun output1_rule16 Int (ite rule16_applies 200 outpp))

(define-fun output0_rule17 Int (ite rule17_applies 100 outp))
(define-fun output1_rule17 Int (ite rule17_applies 200 outpp))

(define-fun output0_rule18 Int (ite rule18_applies 100 outp))
(define-fun output1_rule18 Int (ite rule18_applies 200 outpp))

(define-fun output0_rule19 Int (ite rule19_applies 100 outp))
(define-fun output1_rule19 Int (ite rule19_applies 200 outpp))

(define-fun output0_rule20 Int (ite rule20_applies 100 outp))
(define-fun output1_rule20 Int (ite rule20_applies 200 outpp))

(define-fun output0_rule21 Int (ite rule21_applies 100 outp))
(define-fun output1_rule21 Int (ite rule21_applies 200 outpp))

(define-fun output0_rule22 Int (ite rule22_applies 100 outp))
(define-fun output1_rule22 Int (ite rule22_applies 200 outpp))


;Define a helper function
(define-fun atleast_two_rules_fire () Bool ((_ at-least 2) rule1_applies rule2_applies rule3_applies rule4_applies rule5_applies rule6_applies rule7_applies rule8_applies rule9_applies rule10_applies rule11_applies rule12_applies rule13_applies rule14_applies rule15_applies rule16_applies rule17_applies rule18_applies rule19_applies rule20_applies rule21_applies rule22_applies ))

;Define the violation for the output variables
(define-fun violation_output0() Bool (and atleast_two_rules_fire ( distinct  output0_rule1  output0_rule10  output0_rule11  output0_rule12  output0_rule13  output0_rule14  output0_rule15  output0_rule16  output0_rule17  output0_rule18  output0_rule19  output0_rule2  output0_rule20  output0_rule21  output0_rule22  output0_rule3  output0_rule4  output0_rule5  output0_rule6  output0_rule7  output0_rule8  output0_rule9  ))) 
 
(define-fun violation_output1() Bool (and atleast_two_rules_fire ( distinct  output1_rule10  output1_rule11  output1_rule12  output1_rule13  output1_rule14  output1_rule15  output1_rule16  output1_rule17  output1_rule18  output1_rule19  output1_rule2  output1_rule20  output1_rule21  output1_rule22  output1_rule3  output1_rule4  output1_rule5  output1_rule6  output1_rule7  output1_rule8  output1_rule9  ))) 
 
